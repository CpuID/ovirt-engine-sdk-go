<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright (c) 2016 Red Hat, Inc. / Nathan Sullivan

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.ovirt.engine.api</groupId>
    <artifactId>go-sdk-parent</artifactId>
    <version>4.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>go-sdk</artifactId>
  <packaging>pom</packaging>

  <name>oVirt Go SDK Package</name>

  <properties>

    <!-- By default the version of the SDK will be calculated from the
         version of the project, but it is defined as a property so that
         it can be overriden (by automation scripts, for example): -->
    <sdk.version>${project.version}</sdk.version>

  </properties>

  <build>
    <plugins>

      <!-- Copy model.jar to the target directory, so that it can be
           later loaded by the generator: -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-model</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.ovirt.engine.api</groupId>
                  <artifactId>model</artifactId>
                  <version>${model.version}</version>
                  <type>jar</type>
                  <classifier>sources</classifier>
                  <outputDirectory>${project.basedir}/target</outputDirectory>
                  <destFileName>model.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>

          <!-- Run the code generator: -->
          <execution>
            <id>generate-code</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.ovirt.api.metamodel.tool.Main</mainClass>
              <arguments>
                <argument>org.ovirt.sdk.go.Tool</argument>
                <argument>--model=${project.basedir}/target/model.jar</argument>
                <argument>--out=${project.basedir}</argument>
              </arguments>
              <includePluginDependencies>true</includePluginDependencies>
              <includeProjectDependencies>false</includeProjectDependencies>
            </configuration>
          </execution>

          <!-- Run the tests: -->
          <execution>
            <id>run-tests</id>
            <phase>test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>go</executable>
              <arguments>
                <argument>test</argument>
              </arguments>
            </configuration>
          </execution>

        </executions>
        <dependencies>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>go-sdk-generator</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>
  </build>

</project>
